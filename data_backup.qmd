---
title: "Data Sourcing and Processing"
format: 
  html:
    code-fold: true
execute: 
  freeze: auto # re-render only when source changes.
---

For monthly temperature data, this file shows:
- data sourcing process, 
- exploration of temporal structure
- creation of summary statistics 
- outputting of raw data for sonification

```{r}
#| label: setup
#| message: false
#| warning: false
library(tidyverse)
library(kableExtra)
library(htmlTable)
library(gt)
source("code/cummax_ignore_na.R")
source("code/cummin_ignore_na.R")
```

## Data Source

Three data sets were downloaded from the NOAA National Weather service [NOWData tool](https://www.weather.gov/wrh/Climate?wfo=lox).

All data sets are for Paso Robles, CA, from the start of data collection ("por") to present (2025).

![NOAA NOW Data map tool visualizing location of data source in Paso Robles, CA](images/location.png)

We requested the monthly maximums, monthly minimums, and monthly averages.

![Screenshot of inputs for the monthly maximums data set](images/max.png) After clicking "Go", a data table pops up. We copied it and pasted into Microsoft Excel, removed the summary rows included at the bottom, then saved as a csv.

This process yielded 3 csv files: paso_max.csv, paso_min.csv, and paso_avg.csv.

## Process Data

Read in, combine, and process data from the csv files obtained above.

```{r}
#| label: process
#| echo: false
#| message: false
#| warning: false
min_data <- read.csv("data/paso_min.csv", na.strings = "M")
min_data <- min_data %>% 
  select(-Annual) %>% 
  pivot_longer( ## one row = one month
    cols = Jan:Dec, 
    names_to ="month", 
    values_to = "min"
    )



mean_data <- read.csv("data/paso_avg.csv", na.strings = "M")

mean_data <- mean_data %>% 
  select(-Annual) %>% 
  pivot_longer( ## one row = one month
    cols = Jan:Dec, 
    names_to ="month", 
    values_to = "mean"
    )


max_data <- read.csv("data/paso_max.csv", na.strings = "M")

max_data <- max_data %>% 
  select(-Annual) %>% 
  pivot_longer( ## one row = one month
    cols = Jan:Dec,
    names_to ="month", 
    values_to = "max"
    )

monthly_weather <- bind_cols(min_data, 
                             mean_data[,3], 
                             max_data[,3]) %>%
  mutate(date = ym(paste0(year, "-", month))) ## format date
```

This gets us three monthly time series, which we can visualize.

```{r}
#| label: visualize-monthly
#| warning: false

plot_cols <- c("max" = "red", "min" = "blue", "mean"="grey", "Winter" = "#2f77c3", "Spring" = "#61bf9a", "Summer" = "#f94994", "Fall" =  "#eb9911")

monthly_weather %>% 
  ggplot(aes(x = date)) +
  geom_line(aes(y = min, col = "min")) + 
  geom_line(aes(y = max, col = "max")) + 
  geom_line(aes(y = mean, col = "mean")) + 
  scale_color_manual(values = plot_cols)
  

```

Since there is a big gap in the data after the beginning of the series, we will start the sonification after that period.

```{r}
#| label: visualize-monthly_subset
#| warning: false

monthly_weather <- monthly_weather %>% filter(year>1909)
monthly_weather %>% 
  ggplot(aes(x = date)) +
  geom_line(aes(y = min, col = "min")) + 
  geom_line(aes(y = max, col = "max")) + 
  geom_line(aes(y = mean, col = "mean")) + 
  scale_color_manual(values = plot_cols)
```

### Seasonal Data

Also, since the data is a bit noisy, let's look at some seasonal summaries for each series as well.

```{r}
#| label: seasonal
#| warning: false

monthly_weather <- monthly_weather %>% 
  mutate(
    season = case_when(
      month %in% c("Dec", "Jan", "Feb") ~ "Winter",
      month %in% c("Mar", "Apr", "May")  ~ "Spring",
      month %in% c("June", "July", "Aug")  ~ "Summer",
      month %in% c("Sept", "Oct", "Nov") ~ "Fall"
  ),
  season_color = case_when(
      month %in%  c("Dec", "Jan", "Feb")  ~ "#2f77c3",
      month %in% c("Mar", "Apr", "May")  ~ "#61bf9a",
      month %in% c("June", "July", "Aug")  ~ "#f94994",
      month %in% c("Sept", "Oct", "Nov") ~ "#eb9911"
  ), 
  season_year = case_when(
      month == "Dec" ~ year + 1,  # December belongs to *next* Jan/Feb
      .default = year
  ),
    season_label = paste(season, season_year)
  ) %>%   
  group_by(season, year) %>%
  ungroup()  


monthly_weather <- monthly_weather %>%
  group_by(season_label, season_year) %>%
  mutate(
    xmin = min(date),
    xmax = max(date),
    seas_avg = mean(mean),
    seas_max = max(max),
    seas_min = min(min),
    season_color = unique(season_color),
    season = unique(season)
  ) %>%
  ungroup()

monthly_weather 

```



:::{.callout title="Means and Standard Deviations"}

:::{.callout collapse="true" title="All time"}

:::{.panel-tabset}

## Histograms 
```{r}
#| label: all_time-histogram
summary_table_all <- monthly_weather %>% 
  summarise(
    ## mean 
    Min_mean = mean(min, na.rm = T), 
    Mean_mean = mean(mean, na.rm = T), 
    Max_mean = mean(max, na.rm = T), 
    ## sd
    Min_sd = sd(min, na.rm = T),
    Mean_sd = sd(mean, na.rm = T),
    Max_sd = sd(max, na.rm = T),
    ## max 
    Min_max = max(min, na.rm = T),
    Mean_max = max(mean, na.rm = T),
    Max_max = max(max, na.rm = T),
    ## min
    Min_min = min(min, na.rm = T),
    Mean_min = min(mean, na.rm = T),
    Max_min = min(max, na.rm = T),
  )

## chat help

facet_vars <- c("min", "mean", "max")

# Step 1: Pivot your summary table
vline_data <- summary_table_all %>%
  pivot_longer(cols = contains(c("Min_mean", "Mean_mean", "Max_mean")),
               names_to = "name", values_to = "xintercept") 
vline_data$name = facet_vars


monthly_weather %>%
  bind_cols(summary_table_all[rep(1, nrow(monthly_weather)), ]) %>%
  select(-c(xmin, xmax)) %>%
  pivot_longer(cols = contains(c("min", "mean", "max"))) %>%
  filter(name %in% facet_vars) %>%
  select(year, month, date, season, name, value) %>%
  ggplot(aes(x = value, fill = name)) +
  geom_histogram(bins = 30) +
  geom_vline(
    data = vline_data,
    aes(xintercept = xintercept),
    color = "white", linewidth = 1, linetype = "dashed"
  ) +
  facet_grid(name~., scales = "fixed") +
  theme_minimal() +
  scale_fill_manual(values = plot_cols)

```
## Boxplots
```{r}
#| label: all_time-boxplot

## chat help

facet_vars <- c("min", "mean", "max")

# Step 1: Pivot your summary table
vline_data <- summary_table_all %>%
  pivot_longer(cols = contains(c("Min_mean", "Mean_mean", "Max_mean")),
               names_to = "name", values_to = "xintercept") 
vline_data$name = facet_vars


monthly_weather %>%
  bind_cols(summary_table_all[rep(1, nrow(monthly_weather)), ]) %>%
  select(-c(xmin, xmax)) %>%
  pivot_longer(cols = contains(c("min", "mean", "max"))) %>%
  filter(name %in% facet_vars) %>%
  select(year, month, date, season, name, value) %>%
  ggplot(aes(x = value, fill = name)) +
  geom_boxplot() +
  geom_vline(
    data = vline_data,
    aes(xintercept = xintercept),
    color = "white", linewidth = 1, linetype = "dashed"
  ) +
  facet_grid(name~., scales = "fixed") +
  theme_minimal() +
  scale_fill_manual(values = plot_cols)

```
## Table
```{r}
#| label: all-time-table
summary_table_all %>%
gt() %>%
  tab_header(
    title = "All-time Summaries"
  ) %>%
  fmt_number(
    columns = where(is.numeric), 
    decimals = 2
  )%>%
  cols_label(
    Min_mean = "Mean", 
    Min_sd = "SD", 
    Mean_mean = "Mean", 
    Mean_sd = "SD", 
    Max_mean = "Mean",
    Max_sd = "SD"
  ) %>%
  tab_spanner(
    label = "Monthly Minimums",
    columns = c(Min_mean, Min_sd)
  ) %>%
  tab_spanner(
    label = "Monthly Means",
    columns = c(Mean_mean, Mean_sd)
  ) %>%
  tab_spanner(
    label = "Monthly Maximums",
    columns = c(Max_mean, Max_sd)
)
```
:::
:::

:::{.callout collapse="true" title="By time unit (month, season, year)"}

:::{.callout collapse="true" title="Monthly"}

:::{.panel-tabset}
###### Plot (aggregated)
```{r}
#| label: monthly-plot-agg

month.abb = c("Dec", "Jan", "Feb", "Mar", "Apr", "May" , "June", "July", "Aug",  "Sept", "Oct",  "Nov") 
summary_table <- monthly_weather %>% 
  mutate(month = factor(month, levels = month.abb)) %>%
  group_by(month) %>%
  summarise(
    Min_mean = mean(min, na.rm = T), 
    Min_sd = sd(min, na.rm = T),
    Mean_mean = mean(mean, na.rm = T), 
    Mean_sd = sd(mean, na.rm = T),
    Max_mean = mean(max, na.rm = T), 
    Max_sd = sd(max, na.rm = T)
  ) %>%
  arrange(month)

plot_cols <- c(plot_cols, "Min_mean" = "blue", "Mean_mean" = "grey", "Max_mean" = "red")

agg_plot<- summary_table %>% 
  ggplot(aes(x = month)) + 
  geom_line(aes(y = Min_mean, col = "Min_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Mean_mean, col = "Mean_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Max_mean, col = "Max_mean", group = 1), linewidth = .75) + 
  geom_point(aes(y = Min_mean, col = "Min_mean", group = 1), size = 3) + 
  geom_point(aes(y = Mean_mean, col = "Mean_mean", group = 1), size = 3) + 
  geom_point(aes(y = Max_mean, col = "Max_mean", group = 1), size = 3) + 
  scale_color_manual(values = plot_cols, name = "Legend") + 
  ylab("Temperature (F)")+ xlab("Month") +
   theme(panel.grid.major = element_blank(), 
       panel.grid.minor = element_blank(),
       panel.background = element_blank(), 
       axis.line = element_blank(), 
       axis.title.y = element_text(angle = 0, vjust = .5)) + ylim(c(0,120))

agg_plot
```
###### Plot (raw)
```{r}
#| label: monthly-plot-raw
agg_plot + 
  geom_point(data = monthly_weather, aes(x = month, y = min, col = season), alpha = 0.1, position = position_jitter()) +
  geom_point(data = monthly_weather, aes(x = month, y = mean, col = season), alpha = 0.1, position = position_jitter()) +
  geom_point(data = monthly_weather, aes(x = month, y = max, col = season), alpha = 0.1, position = position_jitter())  +
  ylab("Temperature (F)")+ xlab("Month") +
   theme(panel.grid.major = element_blank(), 
       panel.grid.minor = element_blank(),
       panel.background = element_blank(), 
       axis.line = element_blank(), 
       axis.title.y = element_text(angle = 0, vjust = .5)) + 
  ylim(c(0,120))
```
###### Table
```{r}
#| label: monthly-table

summary_table %>%
  gt() %>%
  tab_header(
    title = "All-time Monthly Summaries"
  ) %>%
  fmt_number(
    columns = where(is.numeric), 
    decimals = 2
  )%>%
  cols_label(
    Min_mean = "Mean", 
    Min_sd = "SD", 
    Mean_mean = "Mean", 
    Mean_sd = "SD", 
    Max_mean = "Mean",
    Max_sd = "SD"
  ) %>%
  tab_spanner(
    label = "Monthly Minimums",
    columns = c(Min_mean, Min_sd)
  ) %>%
  tab_spanner(
    label = "Monthly Means",
    columns = c(Mean_mean, Mean_sd)
  ) %>%
  tab_spanner(
    label = "Monthly Maximums",
    columns = c(Max_mean, Max_sd)
)

```
:::
:::

:::{.callout collapse="true" title="Yearly"}

:::{.panel-tabset}
###### Plot (aggregated)
```{r}
#| label: yearly-plot-agg

summary_table <- monthly_weather %>% 
  group_by(year) %>%
  summarise(
    Min_mean = mean(min, na.rm = T), 
    Min_sd = sd(min, na.rm = T),
    Mean_mean = mean(mean, na.rm = T), 
    Mean_sd = sd(mean, na.rm = T),
    Max_mean = mean(max, na.rm = T), 
    Max_sd = sd(max, na.rm = T)
  ) %>%
  arrange(year)


summary_table %>% 
  ggplot(aes(x = year)) + 
  geom_line(aes(y = Min_mean, col = "Min_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Mean_mean, col = "Mean_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Max_mean, col = "Max_mean", group = 1), linewidth = .75) + 
  geom_point(aes(y = Min_mean, col = "Min_mean", group = 1), size = 3) + 
  geom_point(aes(y = Mean_mean, col = "Mean_mean", group = 1), size = 3) + 
  geom_point(aes(y = Max_mean, col = "Max_mean", group = 1), size = 3) + 
  scale_color_manual(values = plot_cols, name = "Legend") + 
  ylab("Temperature (F)")+ xlab("Year") +
   theme(panel.grid.major = element_blank(), 
       panel.grid.minor = element_blank(),
       panel.background = element_blank(), 
       axis.line = element_blank(), 
       axis.title.y = element_text(angle = 0, vjust = .5)) + ylim(c(0,120))
```
###### Plot (raw)
```{r}
#| label: yearly-plot-raw
summary_table %>% 
  ggplot(aes(x = year)) + 
  geom_line(aes(y = Min_mean, col = "Min_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Mean_mean, col = "Mean_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Max_mean, col = "Max_mean", group = 1), linewidth = .75) + 
  geom_point(aes(y = Min_mean, col = "Min_mean", group = 1), size = 3) + 
  geom_point(aes(y = Mean_mean, col = "Mean_mean", group = 1), size = 3) + 
  geom_point(aes(y = Max_mean, col = "Max_mean", group = 1), size = 3) + 
  scale_color_manual(values = plot_cols, name = "Legend") + 
  geom_point(data = monthly_weather, aes(x = year, y = min, col = "min"), alpha = 0.1, position = position_jitter()) +
  geom_point(data = monthly_weather, aes(x = year, y = mean, col = "mean"), alpha = 0.1, position = position_jitter()) +
  geom_point(data = monthly_weather, aes(x = year, y = max, col = "max"), alpha = 0.1, position = position_jitter()) +
  ylab("Temperature (F)")+ xlab("Year") +
   theme(panel.grid.major = element_blank(), 
       panel.grid.minor = element_blank(),
       panel.background = element_blank(), 
       axis.line = element_blank(), 
       axis.title.y = element_text(angle = 0, vjust = .5))+ ylim(c(0, 120))
```
###### Table
```{r}
#| label: yearly-table

summary_table %>%
  gt() %>%
  tab_header(
    title = "All-time Yearly Summaries"
  ) %>%
  fmt_number(
    columns = where(is.numeric), 
    decimals = 2
  )%>%
  cols_label(
    Min_mean = "Mean", 
    Min_sd = "SD", 
    Mean_mean = "Mean", 
    Mean_sd = "SD", 
    Max_mean = "Mean",
    Max_sd = "SD"
  ) %>%
  tab_spanner(
    label = "Monthly Minimums",
    columns = c(Min_mean, Min_sd)
  ) %>%
  tab_spanner(
    label = "Monthly Means",
    columns = c(Mean_mean, Mean_sd)
  ) %>%
  tab_spanner(
    label = "Monthly Maximums",
    columns = c(Max_mean, Max_sd)
)
```
:::
:::

:::{.callout collapse="true" title="Seasonal"}

:::{.panel-tabset}
###### Plot (aggregated)
```{r}
#| label: seasonal-plot-agg
summary_table <- monthly_weather %>% 
  mutate(season = factor(season, levels = c("Winter", "Spring", "Summer", "Fall"))) %>%
  group_by(season) %>%
  summarise(
    Min_mean = mean(min, na.rm = T), 
    Min_sd = sd(min, na.rm = T),
    Mean_mean = mean(mean, na.rm = T), 
    Mean_sd = sd(mean, na.rm = T),
    Max_mean = mean(max, na.rm = T), 
    Max_sd = sd(max, na.rm = T)
  ) %>%
  arrange(season)


summary_table %>% 
  ggplot(aes(x = season)) + 
  geom_line(aes(y = Min_mean, col = "Min_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Mean_mean, col = "Mean_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Max_mean, col = "Max_mean", group = 1), linewidth = .75) + 
  geom_point(aes(y = Min_mean, col = season, group = 1), size = 3) + 
  geom_point(aes(y = Mean_mean, col = season, group = 1), size = 3) + 
  geom_point(aes(y = Max_mean, col = season, group = 1), size = 3) + 
  scale_color_manual(values = plot_cols, name = "Legend") + 
  ylab("Temperature (F)")+ xlab("Season") +
   theme(panel.grid.major = element_blank(), 
       panel.grid.minor = element_blank(),
       panel.background = element_blank(), 
       axis.line = element_blank(), 
       axis.title.y = element_text(angle = 0, vjust = .5)) + ylim(c(0,120))
```
###### Plot (raw)
```{r}
#| label: seasonal-plot-raw
summary_table %>% 
  ggplot(aes(x = season)) + 
  geom_line(aes(y = Min_mean, col = "Min_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Mean_mean, col = "Mean_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Max_mean, col = "Max_mean", group = 1), linewidth = .75) + 
  geom_point(aes(y = Min_mean, col = season, group = 1), size = 3) + 
  geom_point(aes(y = Mean_mean, col = season, group = 1), size = 3) + 
  geom_point(aes(y = Max_mean, col = season, group = 1), size = 3) + 
  scale_color_manual(values = plot_cols, name = "Legend") + 
  geom_point(data = monthly_weather, aes(x = season, y = min, col = season), alpha = 0.1, position = position_jitter()) +
  geom_point(data = monthly_weather, aes(x = season, y = mean, col = season), alpha = 0.1, position = position_jitter()) +
  geom_point(data = monthly_weather, aes(x = season, y = max, col = season), alpha = 0.1, position = position_jitter()) +
  ylab("Temperature (F)")+ xlab("Year") +
   theme(panel.grid.major = element_blank(), 
       panel.grid.minor = element_blank(),
       panel.background = element_blank(), 
       axis.line = element_blank(), 
       axis.title.y = element_text(angle = 0, vjust = .5))+ ylim(c(0, 120))
```
###### Table
```{r}
#| label: seasonal-table
summary_table %>%
  gt() %>%
  tab_header(
    title = "All-time Yearly Summaries"
  ) %>%
  fmt_number(
    columns = where(is.numeric), 
    decimals = 2
  )%>%
  cols_label(
    Min_mean = "Mean", 
    Min_sd = "SD", 
    Mean_mean = "Mean", 
    Mean_sd = "SD", 
    Max_mean = "Mean",
    Max_sd = "SD"
  ) %>%
  tab_spanner(
    label = "Monthly Minimums",
    columns = c(Min_mean, Min_sd)
  ) %>%
  tab_spanner(
    label = "Monthly Means",
    columns = c(Mean_mean, Mean_sd)
  ) %>%
  tab_spanner(
    label = "Monthly Maximums",
    columns = c(Max_mean, Max_sd)
)
```
:::
:::
:::
:::

### Mins, Means, Maxes

#### All time FIXME ADD MIN AND MAX

:::{.panel-tabset}

## Histograms
```{r}
#| label: all_time-histogram-range
summary_table_all <- monthly_weather %>% 
  summarise(
    
    Min_mean = mean(min, na.rm = T), 
    Min_sd = sd(min, na.rm = T),
    Mean_mean = mean(mean, na.rm = T), 
    Mean_sd = sd(mean, na.rm = T),
    Max_mean = mean(max, na.rm = T), 
    Max_sd = sd(max, na.rm = T)
  )

## chat help

facet_vars <- c("min", "mean", "max")

# Step 1: Pivot your summary table
vline_data <- summary_table_all %>%
  pivot_longer(cols = contains(c("Min_mean", "Mean_mean", "Max_mean")),
               names_to = "name", values_to = "xintercept") 
vline_data$name = facet_vars


monthly_weather %>%
  bind_cols(summary_table_all[rep(1, nrow(monthly_weather)), ]) %>%
  select(-c(xmin, xmax)) %>%
  pivot_longer(cols = contains(c("min", "mean", "max"))) %>%
  filter(name %in% facet_vars) %>%
  select(year, month, date, season, name, value) %>%
  ggplot(aes(x = value, fill = name)) +
  geom_histogram(bins = 30) +
  geom_vline(
    data = vline_data,
    aes(xintercept = xintercept),
    color = "white", linewidth = 1, linetype = "dashed"
  ) +
  facet_grid(name~., scales = "fixed") +
  theme_minimal() +
  scale_fill_manual(values = plot_cols)

```
## Boxplots
```{r}
#| label: all_time-boxplot-range

## chat help

facet_vars <- c("min", "mean", "max")

# Step 1: Pivot your summary table
vline_data <- summary_table_all %>%
  pivot_longer(cols = contains(c("Min_mean", "Mean_mean", "Max_mean")),
               names_to = "name", values_to = "xintercept") 
vline_data$name = facet_vars


monthly_weather %>%
  bind_cols(summary_table_all[rep(1, nrow(monthly_weather)), ]) %>%
  select(-c(xmin, xmax)) %>%
  pivot_longer(cols = contains(c("min", "mean", "max"))) %>%
  filter(name %in% facet_vars) %>%
  select(year, month, date, season, name, value) %>%
  ggplot(aes(x = value, fill = name)) +
  geom_boxplot() +
  geom_vline(
    data = vline_data,
    aes(xintercept = xintercept),
    color = "white", linewidth = 1, linetype = "dashed"
  ) +
  facet_grid(name~., scales = "fixed") +
  theme_minimal() +
  scale_fill_manual(values = plot_cols)

```
## Table
```{r}
#| label: all-time-table-range
summary_table_all %>%
gt() %>%
  tab_header(
    title = "All-time Summaries"
  ) %>%
  fmt_number(
    columns = where(is.numeric), 
    decimals = 2
  )%>%
  cols_label(
    Min_mean = "Mean", 
    Min_sd = "SD", 
    Mean_mean = "Mean", 
    Mean_sd = "SD", 
    Max_mean = "Mean",
    Max_sd = "SD"
  ) %>%
  tab_spanner(
    label = "Monthly Minimums",
    columns = c(Min_mean, Min_sd)
  ) %>%
  tab_spanner(
    label = "Monthly Means",
    columns = c(Mean_mean, Mean_sd)
  ) %>%
  tab_spanner(
    label = "Monthly Maximums",
    columns = c(Max_mean, Max_sd)
)
```

:::

#### By time unit (month, season, year) FIXME WRONG STATS

##### Monthly FIXME WRONG STATS

:::{.panel-tabset}
## Plot (aggregated)
```{r}
#| label: monthly-plot-agg-range

month.abb = c("Dec", "Jan", "Feb", "Mar", "Apr", "May" , "June", "July", "Aug",  "Sept", "Oct",  "Nov") 
summary_table <- monthly_weather %>% 
  mutate(month = factor(month, levels = month.abb)) %>%
  group_by(month) %>%
  summarise(
    Min_mean = mean(min, na.rm = T), 
    Min_sd = sd(min, na.rm = T),
    Mean_mean = mean(mean, na.rm = T), 
    Mean_sd = sd(mean, na.rm = T),
    Max_mean = mean(max, na.rm = T), 
    Max_sd = sd(max, na.rm = T)
  ) %>%
  arrange(month)

plot_cols <- c(plot_cols, "Min_mean" = "blue", "Mean_mean" = "grey", "Max_mean" = "red")

agg_plot<- summary_table %>% 
  ggplot(aes(x = month)) + 
  geom_line(aes(y = Min_mean, col = "Min_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Mean_mean, col = "Mean_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Max_mean, col = "Max_mean", group = 1), linewidth = .75) + 
  geom_point(aes(y = Min_mean, col = "Min_mean", group = 1), size = 3) + 
  geom_point(aes(y = Mean_mean, col = "Mean_mean", group = 1), size = 3) + 
  geom_point(aes(y = Max_mean, col = "Max_mean", group = 1), size = 3) + 
  scale_color_manual(values = plot_cols, name = "Legend") + 
  ylab("Temperature (F)")+ xlab("Month") +
   theme(panel.grid.major = element_blank(), 
       panel.grid.minor = element_blank(),
       panel.background = element_blank(), 
       axis.line = element_blank(), 
       axis.title.y = element_text(angle = 0, vjust = .5)) + ylim(c(0,120))

agg_plot
```
## Plot (raw)
```{r}
#| label: monthly-plot-raw-range
agg_plot + 
  geom_point(data = monthly_weather, aes(x = month, y = min, col = season), alpha = 0.1, position = position_jitter()) +
  geom_point(data = monthly_weather, aes(x = month, y = mean, col = season), alpha = 0.1, position = position_jitter()) +
  geom_point(data = monthly_weather, aes(x = month, y = max, col = season), alpha = 0.1, position = position_jitter())  +
  ylab("Temperature (F)")+ xlab("Month") +
   theme(panel.grid.major = element_blank(), 
       panel.grid.minor = element_blank(),
       panel.background = element_blank(), 
       axis.line = element_blank(), 
       axis.title.y = element_text(angle = 0, vjust = .5)) + 
  ylim(c(0,120))
```
## Table
```{r}
#| label: monthly-table-range

summary_table %>%
  gt() %>%
  tab_header(
    title = "All-time Monthly Summaries"
  ) %>%
  fmt_number(
    columns = where(is.numeric), 
    decimals = 2
  )%>%
  cols_label(
    Min_mean = "Mean", 
    Min_sd = "SD", 
    Mean_mean = "Mean", 
    Mean_sd = "SD", 
    Max_mean = "Mean",
    Max_sd = "SD"
  ) %>%
  tab_spanner(
    label = "Monthly Minimums",
    columns = c(Min_mean, Min_sd)
  ) %>%
  tab_spanner(
    label = "Monthly Means",
    columns = c(Mean_mean, Mean_sd)
  ) %>%
  tab_spanner(
    label = "Monthly Maximums",
    columns = c(Max_mean, Max_sd)
)

```
:::

##### Yearly FIXME WRONG STATS
:::{.panel-tabset}
## Plot (aggregated)
```{r}
#| label: yearly-plot-agg-range

summary_table <- monthly_weather %>% 
  group_by(year) %>%
  summarise(
    Min_mean = mean(min, na.rm = T), 
    Min_sd = sd(min, na.rm = T),
    Mean_mean = mean(mean, na.rm = T), 
    Mean_sd = sd(mean, na.rm = T),
    Max_mean = mean(max, na.rm = T), 
    Max_sd = sd(max, na.rm = T)
  ) %>%
  arrange(year)


summary_table %>% 
  ggplot(aes(x = year)) + 
  geom_line(aes(y = Min_mean, col = "Min_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Mean_mean, col = "Mean_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Max_mean, col = "Max_mean", group = 1), linewidth = .75) + 
  geom_point(aes(y = Min_mean, col = "Min_mean", group = 1), size = 3) + 
  geom_point(aes(y = Mean_mean, col = "Mean_mean", group = 1), size = 3) + 
  geom_point(aes(y = Max_mean, col = "Max_mean", group = 1), size = 3) + 
  scale_color_manual(values = plot_cols, name = "Legend") + 
  ylab("Temperature (F)")+ xlab("Year") +
   theme(panel.grid.major = element_blank(), 
       panel.grid.minor = element_blank(),
       panel.background = element_blank(), 
       axis.line = element_blank(), 
       axis.title.y = element_text(angle = 0, vjust = .5)) + ylim(c(0,120))
```
## Plot (raw)
```{r}
#| label: yearly-plot-raw-range
summary_table %>% 
  ggplot(aes(x = year)) + 
  geom_line(aes(y = Min_mean, col = "Min_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Mean_mean, col = "Mean_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Max_mean, col = "Max_mean", group = 1), linewidth = .75) + 
  geom_point(aes(y = Min_mean, col = "Min_mean", group = 1), size = 3) + 
  geom_point(aes(y = Mean_mean, col = "Mean_mean", group = 1), size = 3) + 
  geom_point(aes(y = Max_mean, col = "Max_mean", group = 1), size = 3) + 
  scale_color_manual(values = plot_cols, name = "Legend") + 
  geom_point(data = monthly_weather, aes(x = year, y = min, col = "min"), alpha = 0.1, position = position_jitter()) +
  geom_point(data = monthly_weather, aes(x = year, y = mean, col = "mean"), alpha = 0.1, position = position_jitter()) +
  geom_point(data = monthly_weather, aes(x = year, y = max, col = "max"), alpha = 0.1, position = position_jitter()) +
  ylab("Temperature (F)")+ xlab("Year") +
   theme(panel.grid.major = element_blank(), 
       panel.grid.minor = element_blank(),
       panel.background = element_blank(), 
       axis.line = element_blank(), 
       axis.title.y = element_text(angle = 0, vjust = .5))+ ylim(c(0, 120))
```
## Table
```{r}
#| label: yearly-table-range

summary_table %>%
  gt() %>%
  tab_header(
    title = "All-time Yearly Summaries"
  ) %>%
  fmt_number(
    columns = where(is.numeric), 
    decimals = 2
  )%>%
  cols_label(
    Min_mean = "Mean", 
    Min_sd = "SD", 
    Mean_mean = "Mean", 
    Mean_sd = "SD", 
    Max_mean = "Mean",
    Max_sd = "SD"
  ) %>%
  tab_spanner(
    label = "Monthly Minimums",
    columns = c(Min_mean, Min_sd)
  ) %>%
  tab_spanner(
    label = "Monthly Means",
    columns = c(Mean_mean, Mean_sd)
  ) %>%
  tab_spanner(
    label = "Monthly Maximums",
    columns = c(Max_mean, Max_sd)
)
```
:::

##### Seasonal FIXME WRONG STATS
:::{.panel-tabset}
## Plot (aggregated)
```{r}
#| label: seasonal-plot-agg-range
summary_table <- monthly_weather %>% 
  mutate(season = factor(season, levels = c("Winter", "Spring", "Summer", "Fall"))) %>%
  group_by(season) %>%
  summarise(
    Min_mean = mean(min, na.rm = T), 
    Min_sd = sd(min, na.rm = T),
    Mean_mean = mean(mean, na.rm = T), 
    Mean_sd = sd(mean, na.rm = T),
    Max_mean = mean(max, na.rm = T), 
    Max_sd = sd(max, na.rm = T)
  ) %>%
  arrange(season)


summary_table %>% 
  ggplot(aes(x = season)) + 
  geom_line(aes(y = Min_mean, col = "Min_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Mean_mean, col = "Mean_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Max_mean, col = "Max_mean", group = 1), linewidth = .75) + 
  geom_point(aes(y = Min_mean, col = season, group = 1), size = 3) + 
  geom_point(aes(y = Mean_mean, col = season, group = 1), size = 3) + 
  geom_point(aes(y = Max_mean, col = season, group = 1), size = 3) + 
  scale_color_manual(values = plot_cols, name = "Legend") + 
  ylab("Temperature (F)")+ xlab("Season") +
   theme(panel.grid.major = element_blank(), 
       panel.grid.minor = element_blank(),
       panel.background = element_blank(), 
       axis.line = element_blank(), 
       axis.title.y = element_text(angle = 0, vjust = .5)) + ylim(c(0,120))
```
## Plot (raw)
```{r}
#| label: seasonal-plot-raw-range
summary_table %>% 
  ggplot(aes(x = season)) + 
  geom_line(aes(y = Min_mean, col = "Min_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Mean_mean, col = "Mean_mean", group = 1), linewidth = .75) + 
  geom_line(aes(y = Max_mean, col = "Max_mean", group = 1), linewidth = .75) + 
  geom_point(aes(y = Min_mean, col = season, group = 1), size = 3) + 
  geom_point(aes(y = Mean_mean, col = season, group = 1), size = 3) + 
  geom_point(aes(y = Max_mean, col = season, group = 1), size = 3) + 
  scale_color_manual(values = plot_cols, name = "Legend") + 
  geom_point(data = monthly_weather, aes(x = season, y = min, col = season), alpha = 0.1, position = position_jitter()) +
  geom_point(data = monthly_weather, aes(x = season, y = mean, col = season), alpha = 0.1, position = position_jitter()) +
  geom_point(data = monthly_weather, aes(x = season, y = max, col = season), alpha = 0.1, position = position_jitter()) +
  ylab("Temperature (F)")+ xlab("Year") +
   theme(panel.grid.major = element_blank(), 
       panel.grid.minor = element_blank(),
       panel.background = element_blank(), 
       axis.line = element_blank(), 
       axis.title.y = element_text(angle = 0, vjust = .5))+ ylim(c(0, 120))
```
## Table
```{r}
#| label: seasonal-table-range
summary_table %>%
  gt() %>%
  tab_header(
    title = "All-time Yearly Summaries"
  ) %>%
  fmt_number(
    columns = where(is.numeric), 
    decimals = 2
  )%>%
  cols_label(
    Min_mean = "Mean", 
    Min_sd = "SD", 
    Mean_mean = "Mean", 
    Mean_sd = "SD", 
    Max_mean = "Mean",
    Max_sd = "SD"
  ) %>%
  tab_spanner(
    label = "Monthly Minimums",
    columns = c(Min_mean, Min_sd)
  ) %>%
  tab_spanner(
    label = "Monthly Means",
    columns = c(Mean_mean, Mean_sd)
  ) %>%
  tab_spanner(
    label = "Monthly Maximums",
    columns = c(Max_mean, Max_sd)
)
```
:::


### Exceedances

When the seasonal max or min reaches a new high or low, indicate this with a true/false.

We can either set this to start from the beginning of the series, or start the "counter" at a certain time. Since we will have three parts to our music where the last part contains the most information (the last part).

```{r}
#| label: exceedances
#| warning: false
out <- monthly_weather %>%
group_by(season) %>%
arrange(date) %>%
mutate(
start_flag = year > 1977,
cummax = cummax_ignore_na(max, start_flag),
cummin = cummin_ignore_na(min, start_flag),
new_max = cummax == max,
new_min = cummin == min
) %>%
ungroup()

monthly_weather$new_max <- out$new_max
monthly_weather$new_min <- out$new_min


ggplot(monthly_weather, aes(x = date)) +
  geom_line(aes(y = min, color = "min")) +
  geom_point(aes(y = min, color = season)) +
  geom_line(aes(y = max, color = "max")) +
  geom_point(aes(y = max, color = season)) +
  geom_line(aes(y = mean, color = "mean")) +
  geom_point(aes(y = mean, color = season)) +
  geom_point(data = filter(monthly_weather, new_max),
             aes(x = date, y = max, color = season), size = 6, shape = 17) +
  geom_point(data = filter(monthly_weather, new_min),
             aes(x = date, y = min, color = season), size = 6, shape = 15) +
  scale_color_manual(values = plot_cols) + 
  scale_x_date(labels = monthly_weather$season_year[monthly_weather$season == "Winter" & monthly_weather$season_year %%5 ==0], 
               breaks = monthly_weather$xmin[monthly_weather$season == "Winter"& monthly_weather$season_year %%5 ==0]) +
  theme(axis.text.x = element_text(angle = 25))
```

### Missing Data

As you will hear (and see) in the animation, there are occasionally missing data points, resulting in silence!



## Raw data for sonification

After all of the above processing and inspection, we can output

### Visualize 

### Output

```{r}
#| warning: false
save(monthly_weather, file = "data/monthly_weather")
```
